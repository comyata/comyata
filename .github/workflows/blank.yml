name: Comyata CI

env:
    DOCKER_BUILDKIT: 1

on:
    push:
        branches: [ main, develop, 'feature/*' ]
    pull_request:
        branches: [ main, develop, 'feature/*' ]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    matrix_test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 20.x, 22.x, 24.x ]
        steps:
            -   uses: actions/checkout@v4
            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ matrix.node-version }}

            -   name: Cache CI node_modules
                uses: actions/cache@v4
                env:
                    cache-name: cache-node-modules
                with:
                    # npm cache files are stored in `~/.npm` on Linux/macOS
                    path: ~/.npm
                    key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ env.cache-name }}

            -   name: Install Deps
                run: |
                    npm ci

            -   name: Test
                run: |
                    npm run test

    build_publish:
        runs-on: ubuntu-latest
        needs: [ 'matrix_test' ]
        strategy:
            matrix:
                node-version: [ 24.x ]
        steps:
            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0 # full history, recommended for sonarcloud

            -   name: Set Branch
                id: short_ref
                run: echo "short_ref=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
            -   name: Set git_url_commit
                id: git_url_commit
                run: echo "git_url_commit=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}" >> $GITHUB_OUTPUT
            -   name: Set git_url_ci_run
                id: git_url_ci_run
                run: echo "git_url_ci_run=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> $GITHUB_OUTPUT
            -   name: Set git_commit
                id: git_commit
                run: echo "git_commit=${GITHUB_REPOSITORY}/${GITHUB_SHA}" >> $GITHUB_OUTPUT
            -   name: Set git_ci_run
                id: git_ci_run
                run: echo "git_ci_run=${GITHUB_REPOSITORY}/${GITHUB_RUN_ID}" >> $GITHUB_OUTPUT

            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ matrix.node-version }}

            -   name: Cache CI node_modules
                uses: actions/cache@v4
                env:
                    cache-name: cache-node-modules
                with:
                    # npm cache files are stored in `~/.npm` on Linux/macOS
                    path: ~/.npm
                    key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ env.cache-name }}

            -   name: Install Deps
                run: |
                    npm ci

            -   name: Build
                env:
                    REACT_APP_ENV: prod
                    REACT_APP_VERSION: ${{ steps.git_commit.outputs.git_commit }}
                    REACT_APP_API_HOST: http://localhost:8081
                    REACT_APP_BASE_PATH: ""
                run: |
                    npm run build

            -   name: Send code coverage report to Codecov.io
                uses: codecov/codecov-action@v4
                with:
                    token: ${{ secrets.CODECOV_TOKEN }}
                    directory: coverage
                    fail_ci_if_error: true

            -   name: SonarCloud Scan
                uses: SonarSource/sonarcloud-github-action@v3
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

            -   name: Prepare packages
                run: |
                    cp LICENSE dist/comyata-fe
                    cp LICENSE dist/comyata-run
                    rm -rf dist/comyata-fe/tests
                    rm -rf dist/comyata-run/tests

            -   name: Publish to NPM
                if: github.ref == 'refs/heads/main'
                #if: startsWith(github.ref, 'refs/tags/')
                run: |
                    echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc

                    node publish.js dist/comyata-run
                    node publish.js dist/comyata-fe

                    rm ~/.npmrc
                env:
                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            -   name: Upload Artifact APP
                uses: actions/upload-artifact@v4
                with:
                    name: app-artifact
                    path: apps/sandbox/dist
                    retention-days: 1
